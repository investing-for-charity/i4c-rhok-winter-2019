{"version":3,"sources":["components/Card/index.tsx","components/Login/index.tsx","components/DashboardContent/utils.ts","components/DashboardContent/PieChart.tsx","components/DashboardContent/index.tsx","components/Dashboard/index.tsx","api/index.ts","App.tsx","index.tsx"],"names":["cardCss","css","_templateObject","Login","_ref","onSubmit","emailValidate","useCallback","value","includes","undefined","Object","core_browser_esm","Login_templateObject","Form","_ref2","formProps","submitting","Field","name","defaultValue","label","isRequired","validate","_ref3","fieldProps","error","react","Textfield","Messages","type","_ref4","assign","FormFooter","_templateObject2","Button","appearance","isLoading","fmtNum","n","toLocaleString","maximumFractionDigits","CustomLabel","props","console","log","victory_label","victory_tooltip","x","y","text","concat","datum","amount","orientation","pointerLength","cornerRadius","width","height","flyoutStyle","fill","stroke","style","fontSize","defaultEvents","VictoryTooltip","PieChart","_ref$dashboardData","dashboardData","charities","annual_distribution_percent","fund_value","victory_pie","labels","padAngle","colorScale","innerRadius","labelComponent","PieChart_CustomLabel","data","filter","percent","map","charity","cause","charityPercent","victory_legend","moneyCss","DashboardContent_templateObject","headingCss","DashboardContent_templateObject2","sectionCss","_templateObject3","DashboardContent","onLogOut","first_name","donation_sum","_templateObject4","_templateObject5","_templateObject6","_templateObject7","SuccessProgressBar","_templateObject8","href","_templateObject9","onClick","reducer","state","action","objectSpread","Dashboard","component","_useReducer","useReducer","step","_useReducer2","slicedToArray","dispatch","onLoginSubmit","asyncToGenerator","regenerator_default","a","mark","_callee","formData","_","callback","wrap","_context","prev","next","email","password","axios","post","sent","stop","_x","_x2","_x3","apply","this","arguments","Dashboard_templateObject","App","className","react_router_dom","react_router","exact","path","render","to","ReactDOM","react_default","createElement","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d988908e.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { css } from '@emotion/core';\n\nexport const cardCss = css`\n  width: 70%;\n  max-width: 700px;\n  background: #fff;\n  border-radius: 3px;\n  padding: 24px;\n  margin: auto auto 32px auto;\n\n  @media (min-width: 420px) {\n    width: 50%;\n  }\n`;\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport Form, { Field, FormFooter, ErrorMessage } from '@atlaskit/form';\nimport Button from '@atlaskit/button';\nimport TextField from '@atlaskit/textfield';\nimport { cardCss } from '../Card';\nimport { useCallback, Fragment } from 'react';\n\ntype Props = {\n  onSubmit: (formData: { email: string; password: string }, _form: any, callback: (errors?: Object) => void) => void;\n};\n\nexport default ({ onSubmit }: Props) => {\n  const emailValidate = useCallback((value: string): undefined | 'INVALID_EMAIL' => {\n    return value.includes('@') ? undefined : 'INVALID_EMAIL';\n  }, []);\n\n  return (\n    <div css={cardCss}>\n      <h1\n        css={css`\n          font-size: 18px;\n          color: #505f79;\n        `}\n      >\n        Log in to donor portal\n      </h1>\n      <Form onSubmit={onSubmit}>\n        {({ formProps, submitting }) => (\n          <form {...formProps}>\n            <Field name=\"email\" defaultValue=\"\" label=\"Email\" isRequired validate={emailValidate}>\n              {({ fieldProps, error }) => (\n                <Fragment>\n                  <TextField {...fieldProps} />\n                  {error && <ErrorMessage>Please enter a valid email address</ErrorMessage>}\n                </Fragment>\n              )}\n            </Field>\n            <Field name=\"password\" type=\"password\" defaultValue=\"\" label=\"Password\" isRequired>\n              {({ fieldProps }) => <TextField type=\"password\" {...fieldProps} />}\n            </Field>\n            <FormFooter>\n              <div\n                css={css`\n                  > button {\n                    background: #36b37e;\n                  }\n                `}\n              >\n                <Button type=\"submit\" appearance=\"primary\" isLoading={submitting}>\n                  Submit\n                </Button>\n              </div>\n            </FormFooter>\n          </form>\n        )}\n      </Form>\n    </div>\n  );\n};\n","export const fmtNum = (n: number) => n.toLocaleString(undefined, { maximumFractionDigits: 2 });\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { DashboardData } from '../../api/types';\nimport { fmtNum } from './utils';\nimport { VictoryLegend, VictoryPie, VictoryLabel, VictoryTooltip } from 'victory';\nimport { Fragment } from 'react';\n\ntype Props = {\n  dashboardData: DashboardData;\n};\n\nconst CustomLabel = props => {\n  console.log('label props', props);\n  return (\n    <g>\n      <VictoryLabel {...props} />\n      <VictoryTooltip\n        {...props}\n        x={200}\n        y={250}\n        text={`$${props.datum.amount}`}\n        orientation=\"top\"\n        pointerLength={0}\n        cornerRadius={50}\n        width={100}\n        height={100}\n        flyoutStyle={{ fill: 'white', stroke: 'transparent' }}\n        style={{ fontSize: 30 }}\n      />\n    </g>\n  );\n};\n\n// @ts-ignore\nCustomLabel.defaultEvents = VictoryTooltip.defaultEvents;\n\nexport default ({ dashboardData: { charities, annual_distribution_percent, fund_value } }: Props) => {\n  const getAmountPerCharity = (charityPercent: number) =>\n    (annual_distribution_percent / 100) * fund_value * (charityPercent / 100);\n\n  return (\n    <Fragment>\n      <VictoryPie\n        style={{ labels: { fill: 'black' } }}\n        padAngle={1}\n        colorScale=\"qualitative\"\n        innerRadius={100}\n        labelComponent={<CustomLabel />}\n        data={charities\n          .filter(x => x.percent > 0)\n          .map(charity => ({\n            x: charity.cause,\n            y: charity.percent,\n            label: `${charity.percent} %`,\n            amount: fmtNum(getAmountPerCharity(charity.percent)),\n          }))}\n      />\n      <VictoryLegend\n        style={{ labels: { fontSize: 24 } }}\n        colorScale=\"qualitative\"\n        x={50}\n        data={charities\n          .filter(x => x.percent > 0)\n          .map(charity => ({\n            name: charity.cause,\n          }))}\n      />\n    </Fragment>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { SuccessProgressBar } from '@atlaskit/progress-bar';\nimport { DashboardData } from '../../api/types';\nimport { cardCss } from '../Card';\nimport { Button } from '@atlaskit/button/components/Button';\nimport PieChart from './PieChart';\nimport { fmtNum } from './utils';\n\ntype Props = {\n  dashboardData: DashboardData;\n  onLogOut: () => void;\n};\n\nconst moneyCss = css`\n  color: #36b37e;\n  font-size: 32px;\n`;\n\nconst headingCss = css`\n  margin: 0;\n  font-size: 12px;\n  color: #505f79;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n`;\n\nconst sectionCss = css`\n  ${cardCss}\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: 420px) {\n    width: 50%;\n    flex-direction: row;\n  }\n`;\n\nexport default ({ dashboardData, onLogOut }: Props) => {\n  const { first_name, donation_sum, annual_distribution_percent, charities, fund_value } = dashboardData;\n  return (\n    <div\n      css={css`\n        dl {\n          margin: 0;\n        }\n\n        dd {\n          margin-left: 0;\n        }\n      `}\n    >\n      <section\n        css={css`\n          ${sectionCss}\n          justify-content: space-between;\n        `}\n      >\n        <h1\n          css={css`\n            font-size: 18px;\n            color: #505f79;\n            margin: 0;\n            margin-bottom: 16px;\n          `}\n        >\n          Welcome {first_name}\n        </h1>\n\n        <div>\n          <h1 css={headingCss}>Your charity fund balance now:</h1>\n          <div css={moneyCss}>${fmtNum(fund_value)}</div>\n        </div>\n      </section>\n\n      <section css={sectionCss}>\n        <h1 css={headingCss}>This year you will distribute {fmtNum(annual_distribution_percent)} %</h1>\n        <div\n          css={css`\n            margin: 16px 0;\n\n            span {\n              background: #36b37e;\n            }\n          `}\n        >\n          <SuccessProgressBar value={annual_distribution_percent / 100} />\n        </div>\n        <div css={moneyCss}>${fmtNum((annual_distribution_percent / 100) * fund_value)}</div>\n      </section>\n      <section css={sectionCss}>\n        <h1 css={headingCss}>Charity allocation percentage</h1>\n        <PieChart dashboardData={dashboardData} />\n      </section>\n      <section css={sectionCss}>\n        <h1 css={headingCss}>Donations received from you:</h1>\n        <div css={moneyCss}>${fmtNum(donation_sum)}</div>\n        <a\n          css={css`\n            text-decoration: none;\n            margin-top: 8px;\n            color: #2684ff;\n          `}\n          href=\"javascript:void(0)\"\n        >\n          Donate more\n        </a>\n      </section>\n      <div\n        css={css`\n          ${sectionCss}\n          padding-top: 8px;\n          padding-bottom: 8px;\n\n          background: #fff;\n\n          > button {\n            background: #fff;\n            width: 100%;\n\n            > span {\n              width: 100%;\n            }\n          }\n        `}\n      >\n        <Button onClick={onLogOut}>Log out</Button>\n      </div>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport React from 'react';\nimport { css, jsx } from '@emotion/core';\nimport { useReducer, useCallback } from 'react';\nimport Login from '../Login';\nimport DashboardContent from '../DashboardContent';\nimport { getDashboardData, mockData } from '../../api';\nimport { DashboardData } from '../../api/types';\n\ntype Step = 'LOGIN' | 'DASHBOARD';\ntype State = {\n  step: Step;\n  dashboardData?: DashboardData;\n};\n\nconst useMock = false;\n\nconst reducer = (state: State, action: Partial<State>): State => ({\n  ...state,\n  ...action,\n});\n\nexport default () => {\n  const [state, dispatch] = useReducer(reducer, {\n    step: useMock ? 'DASHBOARD' : 'LOGIN',\n    dashboardData: useMock ? mockData : undefined,\n  });\n\n  const onLoginSubmit = useCallback(\n    (async (formData, _, callback) => {\n      const { data } = await getDashboardData(formData.email, formData.password);\n      callback();\n\n      dispatch({\n        step: 'DASHBOARD',\n        dashboardData: data,\n      });\n    }) as React.ComponentProps<typeof Login>['onSubmit'],\n    []\n  );\n\n  const onLogOut = useCallback(() => {\n    dispatch({\n      step: 'LOGIN',\n      dashboardData: undefined,\n    });\n  }, []);\n\n  let component: React.ReactNode;\n  switch (state.step) {\n    case 'LOGIN': {\n      component = <Login onSubmit={onLoginSubmit} />;\n      break;\n    }\n    case 'DASHBOARD': {\n      component = state.dashboardData && <DashboardContent dashboardData={state.dashboardData} onLogOut={onLogOut} />;\n      break;\n    }\n  }\n\n  return (\n    <div\n      css={css`\n        min-height: 100vh;\n        height: 100%;\n        padding: 40px 0;\n        background: #57d9a3;\n      `}\n    >\n      {component}\n    </div>\n  );\n};\n","import axios from 'axios';\nimport { DashboardData } from './types';\n\nconst useMock = process.env.NODE_ENV !== 'production';\nconst baseUrl = `https://rhok-i4c-winter2019-fe-pyserv.herokuapp.com/`;\n\nexport const mockData: DashboardData = {\n  actual_distribution: 10143.18,\n  annual_distribution_percent: 15.0,\n  charities: [\n    { cause: 'Underprivileged Youth', charity_name: 'Life for Koori Kids', percent: 10.0 },\n    { cause: 'Refugees in Australia', charity_name: 'St Francis Social Services', percent: 10.0 },\n    { cause: 'Child Slavery', charity_name: 'Connecting Hands', percent: 10.0 },\n    { cause: 'Mental Health', charity_name: 'PANDA', percent: 10.0 },\n    { cause: 'Women & Domestic Violence', charity_name: 'Port Macq Hastings Specialist Service', percent: 10.0 },\n    { cause: 'Global Poverty', charity_name: 'Against Malaria Foundation', percent: 10.0 },\n    { cause: 'Youth at Risk', charity_name: 'Streetwork Incorporated', percent: 20.0 },\n    { cause: 'Social Enterprise', charity_name: 'The Bread and Butter Project', percent: 20.0 },\n  ],\n  donation_sum: 54305.33,\n  first_name: 'Christophe',\n  fund_value: 67621.1809563419,\n};\n\nexport const getDashboardData = (email: string, password: string): Promise<{ data: DashboardData }> =>\n  useMock\n    ? new Promise(res => {\n        setTimeout(res, 1000);\n      }).then(() => ({ data: mockData }))\n    : axios.post(`${baseUrl}/get`, {\n        email,\n        password,\n      });\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { HashRouter, Route, Redirect } from 'react-router-dom';\nimport Dashboard from './components/Dashboard';\n// import Homepage from './components/Homepage';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        {/* reserve homepage url for later, at the moment just redirect */}\n        <Route exact path=\"/\" render={() => <Redirect to=\"/dashboard\" />} />\n        <Route exact path=\"/dashboard\" component={Dashboard} />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}