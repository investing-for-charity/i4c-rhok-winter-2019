{"version":3,"sources":["components/Card/index.tsx","components/Login/index.tsx","components/DashboardContent/index.tsx","components/Dashboard/index.tsx","api/index.ts","components/Header/index.tsx","components/Homepage/index.tsx","App.tsx","index.tsx"],"names":["cardCss","css","_templateObject","Login","_ref","onSubmit","emailValidate","useCallback","value","includes","undefined","Object","core_browser_esm","Login_templateObject","Form","_ref2","formProps","submitting","Field","name","defaultValue","label","isRequired","validate","_ref3","fieldProps","error","react","Textfield","Messages","type","_ref4","assign","FormFooter","Button","appearance","isLoading","moneyCss","DashboardContent_templateObject","sectionCss","_templateObject2","fmtNum","n","toLocaleString","maximumFractionDigits","DashboardContent","_ref$dashboardData","dashboardData","first_name","donation_sum","annual_distribution_percent","charities","fund_value","onLogOut","_templateObject3","_templateObject4","onClick","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","map","cause","charity_name","percent","key","reducer","state","action","objectSpread","Dashboard","component","_useReducer","useReducer","email","step","_useReducer2","slicedToArray","dispatch","onLoginSubmit","asyncToGenerator","regenerator_default","a","mark","_callee","formData","_","callback","data","wrap","_context","prev","next","password","axios","post","concat","sent","stop","_x","_x2","_x3","apply","this","arguments","Dashboard_templateObject","Header","Header_templateObject","href","React","forwardRef","ref","_ref$href","children","rest","objectWithoutProperties","Header_templateObject2","react_router_dom","to","innerRef","Homepage","App","className","react_router","path","exact","ReactDOM","render","react_default","createElement","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b72db248.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { css } from '@emotion/core';\n\nexport const cardCss = css`\n  width: 70%;\n  max-width: 700px;\n  background: #fff;\n  border-radius: 3px;\n  padding: 32px;\n  margin: 32px auto;\n\n  @media (min-width: 420px) {\n    width: 50%;\n  }\n`;\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport Form, { Field, FormFooter, ErrorMessage } from '@atlaskit/form';\nimport Button from '@atlaskit/button';\nimport TextField from '@atlaskit/textfield';\nimport { cardCss } from '../Card';\nimport { useCallback, Fragment } from 'react';\n\ntype Props = {\n  onSubmit: (formData: { email: string; password: string }, _form: any, callback: (errors?: Object) => void) => void;\n};\n\nexport default ({ onSubmit }: Props) => {\n  const emailValidate = useCallback((value: string): undefined | 'INVALID_EMAIL' => {\n    return value.includes('@') ? undefined : 'INVALID_EMAIL';\n  }, []);\n\n  return (\n    <div css={cardCss}>\n      <h1\n        css={css`\n          font-size: 18px;\n          color: #505f79;\n        `}\n      >\n        Log in to donor portal\n      </h1>\n      <Form onSubmit={onSubmit}>\n        {({ formProps, submitting }) => (\n          <form {...formProps}>\n            <Field name=\"email\" defaultValue=\"\" label=\"Email\" isRequired validate={emailValidate}>\n              {({ fieldProps, error }) => (\n                <Fragment>\n                  <TextField {...fieldProps} />\n                  {error && <ErrorMessage>Please enter a valid email address</ErrorMessage>}\n                </Fragment>\n              )}\n            </Field>\n            <Field name=\"password\" type=\"password\" defaultValue=\"\" label=\"Password\" isRequired>\n              {({ fieldProps }) => <TextField type=\"password\" {...fieldProps} />}\n            </Field>\n            <FormFooter>\n              <Button type=\"submit\" appearance=\"primary\" isLoading={submitting}>\n                Submit\n              </Button>\n            </FormFooter>\n          </form>\n        )}\n      </Form>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { DashboardData } from '../../api/types';\nimport { cardCss } from '../Card';\nimport { Button } from '@atlaskit/button/components/Button';\n\ntype Props = {\n  dashboardData: DashboardData;\n  onLogOut: () => void;\n};\n\nconst moneyCss = css`\n  font-weight: bold;\n  color: #36b37e;\n  font-size: 32px;\n`;\n\nconst sectionCss = css`\n  ${cardCss}\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: 420px) {\n    width: 50%;\n    flex-direction: row;\n  }\n`;\n\nconst fmtNum = (n: number) => n.toLocaleString(undefined, { maximumFractionDigits: 2 });\n\nexport default ({\n  dashboardData: { first_name, donation_sum, annual_distribution_percent, charities, fund_value },\n  onLogOut,\n}: Props) => {\n  return (\n    <div\n      css={css`\n        dl {\n          margin: 0;\n        }\n\n        dd {\n          margin-left: 0;\n        }\n      `}\n    >\n      <div\n        css={css`\n          position: fixed;\n          right: 24px;\n          padding: 8px;\n\n          > button {\n            background: #fff;\n          }\n        `}\n      >\n        <Button onClick={onLogOut}>Log out</Button>\n      </div>\n      <div\n        css={css`\n          ${sectionCss}\n          justify-content: space-between;\n        `}\n      >\n        <h1\n          css={css`\n            font-size: 18px;\n            color: #505f79;\n            margin: 0;\n            margin-bottom: 16px;\n          `}\n        >\n          Welcome {first_name}!\n        </h1>\n        <div>\n          Donated this year:\n          <div css={moneyCss}>${fmtNum(donation_sum)}</div>\n        </div>\n      </div>\n      <div css={sectionCss}>\n        <dl>\n          <dd>Your fund value is</dd>\n          <dt css={moneyCss}>${fmtNum(fund_value)}</dt>\n        </dl>\n      </div>\n      <div css={sectionCss}>\n        <dl>\n          <dd>Your annual distribution is</dd>\n          <dt css={moneyCss}>{fmtNum(annual_distribution_percent)}%</dt>\n        </dl>\n      </div>\n      <div\n        css={css`\n          ${sectionCss}\n\n          @media (min-width: 420px) {\n            flex-direction: column;\n          }\n        `}\n      >\n        <div>Each year, you distribute:</div>\n        <table\n          css={css`\n            margin-top: 16px;\n          `}\n        >\n          <thead\n            css={css`\n              font-size: 20px;\n              font-weight: bold;\n            `}\n          >\n            <tr>\n              <td>Cause</td>\n              <td>Distribution</td>\n              <td>Total amount</td>\n            </tr>\n          </thead>\n          <tbody>\n            {charities.map(({ cause, charity_name, percent }) => (\n              <tr key={cause}>\n                <td>\n                  {charity_name}\n                  <br />\n                  <small>{cause}</small>\n                </td>\n                <td css={moneyCss}>{fmtNum(percent)}%</td>\n                <td css={moneyCss}>${fmtNum((annual_distribution_percent / 100) * fund_value * (percent / 100))}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport React from 'react';\nimport { css, jsx } from '@emotion/core';\nimport { useReducer, useCallback } from 'react';\nimport Login from '../Login';\nimport DashboardContent from '../DashboardContent';\nimport { getDashboardData } from '../../api';\nimport { DashboardData } from '../../api/types';\n\ntype Step = 'LOGIN' | 'DASHBOARD';\ntype State = {\n  email: string;\n  step: Step;\n  dashboardData?: DashboardData;\n};\n\nconst reducer = (state: State, action: Partial<State>): State => ({\n  ...state,\n  ...action,\n});\n\nexport default () => {\n  const [state, dispatch] = useReducer(reducer, {\n    email: '',\n    step: 'LOGIN',\n    dashboardData: undefined,\n  });\n\n  const onLoginSubmit = useCallback(\n    (async (formData, _, callback) => {\n      const { data } = await getDashboardData(formData.email, formData.password);\n      callback();\n\n      dispatch({\n        email: formData.email,\n        step: 'DASHBOARD',\n        dashboardData: data,\n      });\n    }) as React.ComponentProps<typeof Login>['onSubmit'],\n    []\n  );\n\n  const onLogOut = useCallback(() => {\n    dispatch({\n      email: '',\n      step: 'LOGIN',\n      dashboardData: undefined,\n    });\n  }, []);\n\n  let component: React.ReactNode;\n  switch (state.step) {\n    case 'LOGIN': {\n      component = <Login onSubmit={onLoginSubmit} />;\n      break;\n    }\n    case 'DASHBOARD': {\n      component = state.dashboardData && <DashboardContent dashboardData={state.dashboardData} onLogOut={onLogOut} />;\n      break;\n    }\n  }\n\n  return (\n    <div\n      css={css`\n        height: 100vh;\n        overflow-y: hidden;\n        background: #57d9a3;\n      `}\n    >\n      {component}\n    </div>\n  );\n};\n","import axios from 'axios';\nimport { DashboardData } from './types';\n\nconst useMock = process.env.NODE_ENV !== 'production';\nconst baseUrl = `https://rhok-i4c-winter2019-fe-pyserv.herokuapp.com/`;\n\nconst mockData: DashboardData = {\n  actual_distribution: 10143.18,\n  annual_distribution_percent: 15.0,\n  charities: [\n    { cause: 'Underprivileged Youth', charity_name: 'Life for Koori Kids', percent: 10.0 },\n    { cause: 'Refugees in Australia', charity_name: 'St Francis Social Services', percent: 10.0 },\n    { cause: 'Child Slavery', charity_name: 'Connecting Hands', percent: 10.0 },\n    { cause: 'Mental Health', charity_name: 'PANDA', percent: 10.0 },\n    { cause: 'Women & Domestic Violence', charity_name: 'Port Macq Hastings Specialist Service', percent: 10.0 },\n    { cause: 'Global Poverty', charity_name: 'Against Malaria Foundation', percent: 10.0 },\n    { cause: 'Youth at Risk', charity_name: 'Streetwork Incorporated', percent: 20.0 },\n    { cause: 'Social Enterprise', charity_name: 'The Bread and Butter Project', percent: 20.0 },\n  ],\n  donation_sum: 54305.33,\n  first_name: 'Christophe',\n  fund_value: 67621.1809563419,\n};\n\nexport const getDashboardData = (email: string, password: string): Promise<{ data: DashboardData }> =>\n  useMock\n    ? new Promise(res => {\n        setTimeout(res, 1000);\n      }).then(() => ({ data: mockData }))\n    : axios.post(`${baseUrl}/get`, {\n        email,\n        password,\n      });\n","/** @jsx jsx */\nimport React from 'react';\nimport { css, jsx } from '@emotion/core';\nimport Button from '@atlaskit/button';\nimport { Link } from 'react-router-dom';\n\nexport default () => (\n  <header\n    css={css`\n      min-height: 100px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: #eee;\n    `}\n  >\n    <Button\n      appearance=\"primary\"\n      href=\"/dashboard\"\n      component={React.forwardRef<HTMLElement, React.AllHTMLAttributes<HTMLElement>>(\n        ({ href = '', children, ...rest }, ref: any) => (\n          <div\n            css={css`\n              & > a {\n                width: 300px !important;\n                height: 50px !important;\n\n                & > * {\n                  width: 100% !important;\n                }\n              }\n            `}\n          >\n            <Link {...rest} to={href} innerRef={ref}>\n              {children}\n            </Link>\n          </div>\n        )\n      )}\n    >\n      Log in\n    </Button>\n  </header>\n);\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport Header from '../Header';\n\nexport default () => (\n  <div>\n    <Header />\n    THIS IS HOMEPAGE\n  </div>\n);\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Dashboard from './components/Dashboard';\nimport Homepage from './components/Homepage';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Route path=\"/\" exact component={Homepage} />\n        <Route path=\"/dashboard\" exact component={Dashboard} />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}